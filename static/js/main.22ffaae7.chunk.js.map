{"version":3,"sources":["assets/img/meeseeks.png","logo.svg","services/BitcoinService.js","services/UserService.js","components/MovesList/MovesList.js","pages/HomePage/HomePage.js","services/ContactService.js","components/ContactFilter/ContactFilter.js","components/ContactPreview/ContactPreview.js","pages/ContactPage/ContactPage.js","components/TransferFund/TransferFund.js","pages/ContactDetailsPage/ContactDetailsPage.js","pages/ContactEdit/ContactEdit.js","pages/SignupPage/SignupPage.js","pages/ChartsPage/ChartsPage.js","components/NavBar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BitcoinService","getBitcoinRate","fetch","then","res","json","getChartMarketPlace","getChartConfirmedTransactions","USER_STORAGE_KEY","getUser","JSON","parse","localStorage","getItem","saveUser","user","coins","moves","setItem","stringify","UserService","addMove","contact","amount","move","toId","_id","to","name","at","Date","now","_createMove","push","moment","require","MovesList","state","this","moveSort","contactId","props","movesToDisplay","filter","map","react_default","a","createElement","key","className","format","length","Component","HomePage","coinsInBTC","setState","rate","_this2","_this$state","components_MovesList_MovesList","contacts","email","phone","_addContact","Promise","resolve","reject","arguments","undefined","txt","possible","i","charAt","Math","floor","random","_makeId","ContactService","getContacts","filterBy","contactsToReturn","term","toLocaleLowerCase","includes","sort","b","getContactById","id","find","concat","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","getEmptyContact","ContactFilter","_ref","setFilter","placeholder","onInput","ContactPreview","src","meeseeks","alt","ContactPage","contactsForDisplay","ev","filterKey","target","value","toUpperCase","components_ContactFilter_ContactFilter","bind","Link","components_ContactPreview_ContactPreview","TransferFund","_this","transferAmount","type","onChange","disabled","onClick","transferCoins","ContactDetails","history","go","match","params","img","components_TransferFund_TransferFund","ContactEdit","preventDefault","catch","err","console","log","_this3","onSubmit","Object","objectSpread","SignupPage","signUp","ChartsPage","updateInterval","marketPlaceRates","confirmedTransactionsRates","loadCharts","setInterval","rates","values","val","y","clearInterval","build","data","color","NavBar","style","listStyle","NavLink","exact","PrivateRoute","Route","Redirect","App","currUser","BrowserRouter","components_NavBar_NavBar","logo","react_transition_group","timeout","enter","exit","classNames","Switch","App_PrivateRoute","path","render","pages_HomePage_HomePage","component","ContactsPage","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22ffaae7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/meeseeks.9929554d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\n\r\nfunction getBitcoinRate() {\r\n    return fetch('https://blockchain.info/tobtc?currency=USD&value=1')\r\n        .then(res=>res.json());\r\n}\r\n\r\nfunction getChartMarketPlace() {\r\n    return fetch('https://api.blockchain.info/charts/market-price?&format=json&cors=true')\r\n        .then(res => res.json());\r\n}\r\nfunction getChartConfirmedTransactions() {\r\n    return fetch('https://api.blockchain.info/charts/median-confirmation-time?format=json&cors=true')\r\n        .then(res => res.json());\r\n}\r\n\r\nexport default {\r\n    getBitcoinRate,\r\n    getChartMarketPlace,\r\n    getChartConfirmedTransactions,\r\n}","const USER_STORAGE_KEY = 'user';\r\n\r\nfunction getUser() {\r\n    return JSON.parse(localStorage.getItem(USER_STORAGE_KEY));\r\n}\r\n\r\nfunction saveUser(user) {\r\n    user.coins = user.coins || 100;\r\n    user.moves = user.moves || [];\r\n    localStorage.setItem(USER_STORAGE_KEY , JSON.stringify(user));\r\n}\r\n\r\nfunction addMove(contact , amount) {\r\n    const move = _createMove(contact,amount);\r\n    const user = getUser();\r\n    user.moves.push(move);\r\n    user.coins -= amount;\r\n    saveUser(user);\r\n\r\n}\r\n\r\nexport default {\r\n    getUser,\r\n    saveUser,\r\n    addMove,\r\n}\r\n\r\nfunction _createMove(contact, amount) {\r\n    return {\r\n        toId: contact._id,\r\n        to: contact.name,\r\n        at: Date.now(),\r\n        amount\r\n    };\r\n}","import React , {Component} from 'react';\r\nimport './MovesList.scss';\r\n\r\nimport UserService from '../../services/UserService';\r\nconst moment = require('moment');\r\n\r\nclass MovesList extends Component {\r\n    state = {\r\n        user: UserService.getUser(),\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.moveSort();\r\n    }\r\n\r\n    moveSort() {\r\n        const {moves} = this.state.user;\r\n        const {contactId} = this.props;\r\n        \r\n        var movesToDisplay = moves.filter(move => contactId?(move.toId === contactId):true).map(move=> {\r\n            return (\r\n                <div key={move.at} className=\"move-item\">\r\n                    {!contactId && <div><span>To:</span> {move.to}</div>}\r\n                    <div><span>At:</span> {moment(move.at).format('llll')}</div>\r\n                    <div><span>Amount:</span> {move.amount}</div>    \r\n                </div>\r\n            );\r\n        })\r\n        if (!contactId) {\r\n            return [movesToDisplay[movesToDisplay.length-1],\r\n                    movesToDisplay[movesToDisplay.length-2],\r\n                    movesToDisplay[movesToDisplay.length-3]]\r\n        } else {\r\n            return movesToDisplay;\r\n        }\r\n    }\r\n    \r\n    \r\n    render() {\r\n        const {contactId} = this.props;\r\n        \r\n        \r\n        return (\r\n            <section className=\"moves-list-container\">\r\n            <h4>{contactId? 'Your Moves:' : 'Your Last 3 Moves:'}</h4>\r\n            { this.moveSort() }\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovesList;","import React, { Component } from 'react';\r\nimport './HomePage.scss';\r\n\r\nimport BitcoinService from '../../services/BitcoinService.js';\r\nimport MovesList from '../../components/MovesList/MovesList';\r\nclass HomePage extends Component {\r\n\r\n    state = {\r\n        user: {},\r\n        coinsInBTC: 0,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({user: this.props.user});\r\n        await BitcoinService.getBitcoinRate()\r\n            .then(rate => {\r\n                this.setState({coinsInBTC: (this.state.user.coins || 0) * rate})\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {user , coinsInBTC} = this.state;\r\n        return (\r\n            <section className=\"home-page-container\">\r\n                <h1>Hello {user.name}</h1>\r\n                <div>Coins: {user.coins}</div>\r\n                <div>BTC: {coinsInBTC}</div>\r\n                <MovesList/>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort( (a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts (filterBy = null) {\n  return new Promise((resolve, reject) => { \n    var contactsToReturn = contacts;\n    if (filterBy) {\n      const {term} = filterBy;\n      contactsToReturn = contacts.filter( contact => {\n        return contact.name.toLocaleLowerCase().includes(term) ||\n               contact.phone.toLocaleLowerCase().includes(term) ||\n               contact.email.toLocaleLowerCase().includes(term)\n      })\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => { \n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {\n  term = term.toLocaleLowerCase()\n  return new Promise((resolve, reject) => { \n    const c = contacts.filter( contact => {\n      return contact.name.toLocaleLowerCase().includes(term) ||\n             contact.phone.toLocaleLowerCase().includes(term) ||\n             contact.email.toLocaleLowerCase().includes(term)\n    })\n\n    resolve(c)\n  })\n}\n\nexport default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  filter,\n  saveContact,\n  getEmptyContact\n}\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import React from 'react';\r\nimport './ContactFilter.scss';\r\n\r\nconst ContactFilter = ({setFilter}) => {\r\n\r\n    return (\r\n        <input className=\"contact-filter\" placeholder=\"Search\" onInput={setFilter} />\r\n    );\r\n    \r\n\r\n\r\n}\r\n\r\nexport default ContactFilter;","import React from 'react';\r\nimport './ContactPreview.scss';\r\nimport meeseeks from '../../assets/img/meeseeks.png';\r\nconst ContactPreview = ({contact}) => {\r\n    \r\n    return (\r\n        <div className=\"contact-preview-container\">\r\n            <img src={meeseeks} alt=\"contact\"/>\r\n            <div className=\"contact-content\">\r\n                <div className=\"contact-name\">{contact.name}</div>\r\n                <div className=\"contact-phone\">{contact.phone}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ContactPreview;\r\n","import React, { Component } from 'react';\r\nimport './ContactPage.scss';\r\n\r\nimport ContactService from '../../services/ContactService';\r\n\r\nimport ContactFilter from '../../components/ContactFilter/ContactFilter';\r\nimport ContactPreview from '../../components/ContactPreview/ContactPreview';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ContactPage extends Component {\r\n\r\n    state = {\r\n        contacts: null,\r\n        contactsForDisplay: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await ContactService.getContacts()\r\n            .then(contacts => this.setState({contacts , contactsForDisplay: contacts}))\r\n    }\r\n\r\n    setFilter(ev) {\r\n        const filterKey = ev.target.value;\r\n        const contactsForDisplay = this.state.contacts.filter(contact => {\r\n            return contact.name.toUpperCase().includes(filterKey.toUpperCase()) || \r\n                    contact.phone.includes(filterKey) ||\r\n                    contact.email.toUpperCase().includes(filterKey.toUpperCase());\r\n        });\r\n        this.setState({contactsForDisplay});\r\n\r\n    }\r\n\r\n    render() {\r\n        const {contacts, contactsForDisplay} = this.state;\r\n\r\n        return (\r\n            <section className=\"contact-page-container\">\r\n                <ContactFilter setFilter={this.setFilter.bind(this)} />\r\n                <section className=\"list-container\">        \r\n                    {   \r\n                        contacts &&\r\n                        contactsForDisplay.map(contact=> {\r\n                            return (\r\n                                <li key={contact._id}>\r\n                                    <Link to={`/contact/${contact._id}`}>\r\n                                        <ContactPreview contact={contact} />\r\n                                    </Link>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </section>\r\n                <Link to=\"/contact/edit\" className=\"add-btn\">✚</Link>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactPage;","import React , {Component} from 'react';\r\nimport './TransferFund.scss';\r\nimport UserService from '../../services/UserService';\r\n\r\nclass TransferFund extends Component {\r\n    state = {\r\n        user: UserService.getUser(),\r\n        contact: this.props.contact,\r\n        transferAmount: null,\r\n    }\r\n\r\n    render() {\r\n        const {contact , transferAmount} = this.state;\r\n        return (\r\n            <section className=\"transfer-fund-container\">\r\n                <h4>Transfer coins to {contact.name}:</h4>\r\n                <div className=\"action\">\r\n                    Amount: <input type=\"number\" onChange={(ev)=>this.setState({transferAmount: ev.target.value})} />\r\n                    <button disabled={!this.state.transferAmount? true : false} onClick={this.props.transferCoins.bind(this,contact , transferAmount)}>Transfer</button>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TransferFund;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './ContactDetailsPage.scss';\r\nimport img from '../../assets/img/meeseeks.png';\r\n\r\nimport ContactService from '../../services/ContactService';\r\n\r\nimport TransferFund from '../../components/TransferFund/TransferFund';\r\nimport MovesList from '../../components/MovesList/MovesList';\r\nimport UserService from '../../services/UserService';\r\n\r\nclass ContactDetails extends Component {\r\n\r\n    state = {\r\n        contact: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {contactId} = this.props.match.params;\r\n        await ContactService.getContactById(contactId)\r\n            .then(contact => this.setState({contact}))\r\n    }\r\n\r\n    deleteContact = () => {\r\n        const {contact} = this.state;\r\n        ContactService.deleteContact(contact._id)\r\n            .then(() => {\r\n                const {history} = this.props;\r\n                history.go(-1);\r\n            });\r\n    }\r\n\r\n    transferCoins = (contact, transferAmount) => {\r\n        // const {contact , transferAmount} = this.state;\r\n        UserService.addMove(contact, transferAmount);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {contact} = this.state;\r\n\r\n        return contact && (\r\n            <section className=\"contact-details-container\">\r\n                <section className=\"contact-data\">\r\n                    <img src={img} alt=\"contact\"/>\r\n                    <div className=\"contact-content\">\r\n                        <div className=\"contact-name\">{contact.name}</div>\r\n                        <div className=\"contact-phone\">{contact.phone}</div>\r\n                        <div className=\"contact-email\">{contact.email}</div>\r\n                        <div className=\"contact-id\">{contact._id}</div>\r\n                    </div>\r\n                </section>\r\n                <div className=\"contact-actions\">\r\n                    <button>\r\n                        <Link to={`/contact/edit/${contact._id}`}>✎</Link>\r\n                    </button>\r\n                    <button onClick={this.deleteContact}>✘</button>\r\n                </div>\r\n                <br/>\r\n                <TransferFund contact={contact} transferCoins={this.transferCoins} />\r\n                <MovesList contactId={contact._id}/>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactDetails;","import React, {Component} from 'react';\r\nimport './ContactEdit.scss';\r\nimport ContactService from '../../services/ContactService';\r\nimport img from '../../assets/img/meeseeks.png';\r\n\r\nclass ContactEdit extends Component {\r\n\r\n    state = {\r\n        contact: {},\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {contactId} =  this.props.match.params;\r\n        await ContactService.getContactById(contactId)\r\n            .then(contact => (contact)? this.setState({contact}) : '')\r\n            .catch(err => console.log('New Contact'));\r\n    }\r\n\r\n    saveContact = (ev) => {\r\n        ev.preventDefault();\r\n        const {contact} = this.state;\r\n        ContactService.saveContact(contact);\r\n        const {history} = this.props;\r\n        history.go(-1);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {contact} = this.state;\r\n\r\n\r\n        return contact && (\r\n            <section className=\"contact-edit-container\">\r\n                <img src={img} alt=\"contact\"/>\r\n                <form onSubmit={this.saveContact}>\r\n                    <div>\r\n                        <label>\r\n                            <span>Name:</span>\r\n                            <input value={contact.name || ''} type=\"text\" onChange={(ev)=>this.setState({contact: {...contact , name: ev.target.value}})} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <span>Phone:</span>\r\n                            <input value={contact.phone || ''} type=\"text\" onChange={(ev)=>this.setState({contact: {...contact , phone: ev.target.value}})} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <span>Email:</span>\r\n                            <input value={contact.email || ''} type=\"email\" onChange={(ev)=>this.setState({contact: {...contact , email: ev.target.value}})} />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"btn-container\">\r\n                        <button>Save</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ContactEdit;","import React , {Component} from 'react';\r\nimport './SignupPage.scss';\r\n\r\nimport UserService from '../../services/UserService';\r\n\r\nclass SignupPage extends Component {\r\n\r\n    state = {\r\n        user: {\r\n            name: null,\r\n        }\r\n    }\r\n\r\n    signUp = (ev) => {\r\n        ev.preventDefault();\r\n        UserService.saveUser(this.state.user);\r\n        const {history} = this.props;\r\n        history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"signup-page-container\">\r\n                <form onSubmit={this.signUp}>\r\n                    <div>\r\n                        <label>\r\n                            <h3>Please enter your name:</h3>\r\n                            <input type=\"text\" onChange={(ev)=>this.setState({user: {...this.state.user , name: ev.target.value}})} />\r\n                        </label>\r\n                    </div>\r\n                    <button>Sign up</button>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignupPage;","import React , {Component} from 'react';\r\nimport './ChartsPage.scss';\r\n\r\nimport { Sparklines ,SparklinesLine  } from 'react-sparklines';\r\nimport BitcoinService from '../../services/BitcoinService';\r\n\r\nclass ChartsPage extends Component {\r\n\r\n    state = {\r\n        updateInterval: null,\r\n        marketPlaceRates: [],\r\n        confirmedTransactionsRates: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCharts();\r\n        this.setState({updateInterval: setInterval(this.loadCharts, 5000)});\r\n    }\r\n\r\n    async loadCharts() {\r\n        await BitcoinService.getChartMarketPlace()\r\n            .then(rates=>{\r\n                if (!this.state) return;\r\n                const values = rates.values.map(val=>val.y);\r\n                this.setState({marketPlaceRates: values});\r\n            });\r\n        await BitcoinService.getChartConfirmedTransactions()\r\n            .then(rates => {\r\n                if (!this.state) return;\r\n                const values = rates.values.map(val=>val.y);\r\n                this.setState({confirmedTransactionsRates: values});\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.updateInterval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"charts-page-container\">\r\n                <h1>Market Places Rates</h1>\r\n                <div className=\"chart\">\r\n                    <Sparklines data={this.state.marketPlaceRates}>\r\n                        <SparklinesLine color=\"blue\" />\r\n                    </Sparklines>\r\n                </div>\r\n                <h1>Confirmed Transactions Rates</h1>\r\n                <div className=\"chart\">\r\n                    <Sparklines data={this.state.confirmedTransactionsRates}>\r\n                        <SparklinesLine color=\"green\" />\r\n                    </Sparklines>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartsPage;","import React from 'react';\r\nimport './NavBar.scss';\r\n\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst NavBar = props => {\r\n    \r\n    return (\r\n        <nav>\r\n            <ul style={{ listStyle: 'none' }}>\r\n                <NavLink exact to=\"/\">\r\n                    <li>Home</li>\r\n                </NavLink>\r\n                <NavLink exact to=\"/contact\">\r\n                    <li>Contact Page</li>\r\n                </NavLink>\r\n                <NavLink exact to=\"/stats\">\r\n                    <li>Stats</li>\r\n                </NavLink>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\nexport default NavBar;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport HomePage from './pages/HomePage/HomePage.js';\nimport UserService from './services/UserService';\nimport ContactsPage from './pages/ContactPage/ContactPage';\nimport ContactDetails from './pages/ContactDetailsPage/ContactDetailsPage';\nimport ContactEdit from './pages/ContactEdit/ContactEdit';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport ChartsPage from './pages/ChartsPage/ChartsPage';\nimport NavBar from './components/NavBar/NavBar';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nconst PrivateRoute = props => {\n  return props.user ? <Route {...props} /> : <Redirect to=\"/signup\" />;\n};\n\n\nclass App extends Component {\n  \n  state = {\n    currUser: UserService.getUser()\n  }\n  \n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {this.state.currUser && <NavBar/>}\n\n          <div className=\"App-bg\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </div>\n\n\n          <CSSTransition\n            timeout={{ enter: 3000, exit: 3000 }}\n            classNames=\"fade\"\n          >\n            <Switch>\n              <PrivateRoute user={this.state.currUser} path=\"/\" exact \n                    render={() => {\n                      return <HomePage user={this.state.currUser} />;\n                    }}\n              />\n              <PrivateRoute user={this.state.currUser} path=\"/stats\" exact component={ChartsPage} />\n              <PrivateRoute user={this.state.currUser} path=\"/contact\" exact component={ContactsPage} />\n              <PrivateRoute user={this.state.currUser} path=\"/contact/edit/:contactId?\" exact component={ContactEdit} />\n              <PrivateRoute user={this.state.currUser} path=\"/contact/:contactId\" exact component={ContactDetails} />\n              <Route path=\"/signup\" exact component={SignupPage} />\n            </Switch>\n          </CSSTransition>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}